CREATE TABLE altapostoperatoria (apo_codigo BIGINT AUTO_INCREMENT, apo_tra_codigo BIGINT NOT NULL, apo_med_codigo BIGINT NOT NULL, apo_cli_codigo BIGINT NOT NULL, apo_exploracion TEXT NOT NULL, apo_info_especialista TEXT NOT NULL, apo_tratamiento TEXT NOT NULL, apo_observaciones TEXT NOT NULL, INDEX apo_cli_codigo_idx (apo_cli_codigo), PRIMARY KEY(apo_codigo)) ENGINE = INNODB;
CREATE TABLE clinica (cli_codigo BIGINT AUTO_INCREMENT, cli_nombre VARCHAR(50) NOT NULL, cli_direccion VARCHAR(50) NOT NULL, cli_telefono VARCHAR(15) NOT NULL, PRIMARY KEY(cli_codigo)) ENGINE = INNODB;
CREATE TABLE contacto (con_codigo BIGINT AUTO_INCREMENT, con_pac_codigo BIGINT NOT NULL, con_nombre VARCHAR(150) NOT NULL, con_telefono1 VARCHAR(15), con_telefono2 VARCHAR(15), con_email VARCHAR(50), con_direccion VARCHAR(150), INDEX con_pac_codigo_idx (con_pac_codigo), PRIMARY KEY(con_codigo)) ENGINE = INNODB;
CREATE TABLE contactologistica (clo_codigo BIGINT AUTO_INCREMENT, clo_nombre VARCHAR(50) NOT NULL, clo_identificacion VARCHAR(30) NOT NULL, clo_telefono VARCHAR(15) NOT NULL, clo_email VARCHAR(150), clo_direccion VARCHAR(50), clo_caracteristica VARCHAR(50) NOT NULL, PRIMARY KEY(clo_codigo)) ENGINE = INNODB;
CREATE TABLE descripciontratamiento (dtr_codigo BIGINT AUTO_INCREMENT, dtr_tit_codigo BIGINT, dtr_descripcion VARCHAR(200) NOT NULL, INDEX dtr_tit_codigo_idx (dtr_tit_codigo), PRIMARY KEY(dtr_codigo)) ENGINE = INNODB;
CREATE TABLE dietapaciente (dtp_codigo BIGINT AUTO_INCREMENT, dtp_tra_codigo BIGINT NOT NULL, dtp_recomendaciones TEXT NOT NULL, dtp_med_codigo BIGINT NOT NULL, dtp_tipo_dieta VARCHAR(20) DEFAULT 'PREOPERATORIA' NOT NULL, INDEX dtp_tra_codigo_idx (dtp_tra_codigo), INDEX dtp_med_codigo_idx (dtp_med_codigo), PRIMARY KEY(dtp_codigo)) ENGINE = INNODB;
CREATE TABLE elementosxintervencion (exi_preo_codigo BIGINT, exi_maq_codigo BIGINT, exi_cantidad BIGINT, PRIMARY KEY(exi_preo_codigo, exi_maq_codigo)) ENGINE = INNODB;
CREATE TABLE enfermera (enf_codigo BIGINT AUTO_INCREMENT, enf_nombre VARCHAR(50) NOT NULL, enf_valor_servicio BIGINT NOT NULL, PRIMARY KEY(enf_codigo)) ENGINE = INNODB;
CREATE TABLE foto (fot_codigo BIGINT AUTO_INCREMENT, fot_nombre VARCHAR(100) NOT NULL, fot_uri_imagen VARCHAR(150) NOT NULL, fot_preoperatoria TINYINT DEFAULT '1' NOT NULL, fot_preo_codigo BIGINT, pos_codigo BIGINT, INDEX fot_preo_codigo_idx (fot_preo_codigo), INDEX pos_codigo_idx (pos_codigo), PRIMARY KEY(fot_codigo)) ENGINE = INNODB;
CREATE TABLE hotel (hot_codigo BIGINT AUTO_INCREMENT, hot_nombre VARCHAR(100) NOT NULL, hot_direccion VARCHAR(100) NOT NULL, hot_telefono VARCHAR(15) NOT NULL, hot_web VARCHAR(150), hot_email VARCHAR(150) NOT NULL, hot_valor_noche BIGINT NOT NULL, PRIMARY KEY(hot_codigo)) ENGINE = INNODB;
CREATE TABLE logistica (log_codigo BIGINT AUTO_INCREMENT, log_tra_codigo BIGINT NOT NULL, log_reh_codigo BIGINT NOT NULL, log_vue_codigo BIGINT NOT NULL, log_trans_codigo BIGINT NOT NULL, log_clo_codigo_responsable BIGINT NOT NULL, log_clo_codigo_guia BIGINT NOT NULL, log_observaciones TEXT NOT NULL, INDEX log_tra_codigo_idx (log_tra_codigo), INDEX log_clo_codigo_responsable_idx (log_clo_codigo_responsable), INDEX log_clo_codigo_guia_idx (log_clo_codigo_guia), INDEX log_reh_codigo_idx (log_reh_codigo), INDEX log_vue_codigo_idx (log_vue_codigo), INDEX log_trans_codigo_idx (log_trans_codigo), PRIMARY KEY(log_codigo)) ENGINE = INNODB;
CREATE TABLE materialquirurgico (maq_codigo BIGINT AUTO_INCREMENT, maq_nombre VARCHAR(50) NOT NULL, maq_valor BIGINT, PRIMARY KEY(maq_codigo)) ENGINE = INNODB;
CREATE TABLE medico (med_codigo BIGINT AUTO_INCREMENT, med_sfg_id BIGINT NOT NULL, med_nombre VARCHAR(50) NOT NULL, med_direccion VARCHAR(50) NOT NULL, med_telefono1 VARCHAR(15) NOT NULL, med_telefono2 VARCHAR(15) NOT NULL, med_email VARCHAR(100) NOT NULL, med_especialidad VARCHAR(50) NOT NULL, PRIMARY KEY(med_codigo)) ENGINE = INNODB;
CREATE TABLE menu (men_codigo BIGINT AUTO_INCREMENT, men_desayuno VARCHAR(100) NOT NULL, men_almuerzo VARCHAR(100) NOT NULL, men_comida VARCHAR(100) NOT NULL, men_dtp_codigo BIGINT NOT NULL, INDEX men_dtp_codigo_idx (men_dtp_codigo), PRIMARY KEY(men_codigo)) ENGINE = INNODB;
CREATE TABLE paciente (pac_codigo BIGINT AUTO_INCREMENT, pac_nombre VARCHAR(150) NOT NULL, pac_identificacion VARCHAR(30) NOT NULL, pac_fecha_nacimiento DATE NOT NULL, pac_telefono1 VARCHAR(15), pac_telefono2 VARCHAR(15), pac_email VARCHAR(50), pac_direccion VARCHAR(150) NOT NULL, pac_ciudad VARCHAR(50) NOT NULL, pac_estado VARCHAR(50) NOT NULL, pac_pais VARCHAR(50) NOT NULL, pac_cod_postal BIGINT DEFAULT '0' NOT NULL, PRIMARY KEY(pac_codigo)) ENGINE = INNODB;
CREATE TABLE postoperatorio (pos_codigo BIGINT AUTO_INCREMENT, pos_tra_codigo BIGINT NOT NULL, pos_med_codigo_responsable BIGINT NOT NULL, pos_hora_cita_col TIME NOT NULL, pos_valoracion TEXT NOT NULL, pos_recomendaciones TEXT NOT NULL, pos_tipo_anestesia VARCHAR(20) NOT NULL, pos_hora_cirugia TIME NOT NULL, pos_enf_codigo BIGINT NOT NULL, pos_info_especialista TEXT NOT NULL, pos_observaciones TEXT NOT NULL, INDEX pos_tra_codigo_idx (pos_tra_codigo), INDEX pos_enf_codigo_idx (pos_enf_codigo), INDEX pos_med_codigo_responsable_idx (pos_med_codigo_responsable), PRIMARY KEY(pos_codigo)) ENGINE = INNODB;
CREATE TABLE preoperatorio (preo_codigo BIGINT AUTO_INCREMENT, preo_tra_codigo BIGINT, preo_glicemia VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_tiempo_coagulacion VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_tpt VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_ptt VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_creatinina VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_nitrogeno_ureico VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_parcial_orina VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_electro VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_rx_torax VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_pa_lateral VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_prueba_esfuerzo VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_hg_glicosilada VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_tsh VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_t3 VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_t4 VARCHAR(15) DEFAULT 'no aplica' NOT NULL, preo_vih TINYINT NOT NULL, preo_fecha_cita_ext DATE, preo_hora_cita_ext TIME, preo_fecha_cirugia DATE, preo_hora_cirugia TIME, preo_cli_codigo BIGINT, preo_enf_codigo BIGINT, preo_informe_especialista TEXT, preo_observaciones TEXT, preo_med_codigo BIGINT, INDEX preo_tra_codigo_idx (preo_tra_codigo), INDEX preo_cli_codigo_idx (preo_cli_codigo), INDEX preo_enf_codigo_idx (preo_enf_codigo), INDEX preo_med_codigo_idx (preo_med_codigo), PRIMARY KEY(preo_codigo)) ENGINE = INNODB;
CREATE TABLE procedimiento (pro_codigo BIGINT AUTO_INCREMENT, pro_tra_codigo BIGINT NOT NULL, pro_tit_codigo BIGINT NOT NULL, pro_dtr_codigo BIGINT NOT NULL, pro_otro TEXT, INDEX pro_tra_codigo_idx (pro_tra_codigo), INDEX pro_tit_codigo_idx (pro_tit_codigo), INDEX pro_dtr_codigo_idx (pro_dtr_codigo), PRIMARY KEY(pro_codigo)) ENGINE = INNODB;
CREATE TABLE reservahotel (reh_codigo BIGINT AUTO_INCREMENT, reh_hot_codigo BIGINT, reh_tra_codigo BIGINT, reh_fecha_entrada DATE NOT NULL, reh_fecha_salida DATE NOT NULL, reh_hora_llegada TIME NOT NULL, reh_hora_salida TIME, reh_localizador VARCHAR(80) NOT NULL, reh_dias_estadia INT NOT NULL, reh_noches_estadia INT NOT NULL, INDEX reh_tra_codigo_idx (reh_tra_codigo), INDEX reh_hot_codigo_idx (reh_hot_codigo), PRIMARY KEY(reh_codigo)) ENGINE = INNODB;
CREATE TABLE reservavuelo (vue_codigo BIGINT AUTO_INCREMENT, vue_tra_codigo BIGINT NOT NULL, vue_origen VARCHAR(100) NOT NULL, vue_destino VARCHAR(100) NOT NULL, vue_fecha_ida DATE NOT NULL, vue_fecha_regreso DATE NOT NULL, vue_nro_vuelo_ida INT NOT NULL, vue_nro_vuelo_regreso INT NOT NULL, vue_hora_salida_ida TIME NOT NULL, vue_hora_llegada_ida TIME NOT NULL, vue_hora_salida_vuelta TIME NOT NULL, vue_hora_llegada_vuelta TIME NOT NULL, vue_valor BIGINT NOT NULL, INDEX vue_tra_codigo_idx (vue_tra_codigo), PRIMARY KEY(vue_codigo)) ENGINE = INNODB;
CREATE TABLE tipotratamiento (tit_codigo BIGINT AUTO_INCREMENT, tit_nombre VARCHAR(100) DEFAULT 'Otro' NOT NULL, PRIMARY KEY(tit_codigo)) ENGINE = INNODB;
CREATE TABLE transporte (trans_codigo BIGINT AUTO_INCREMENT, trans_nombre VARCHAR(50) NOT NULL, trans_identificacion VARCHAR(50) NOT NULL, trans_telefono1 VARCHAR(15) NOT NULL, trans_telefono2 VARCHAR(15) NOT NULL, trans_direccion VARCHAR(150) NOT NULL, trans_placa_vehiculo VARCHAR(15) NOT NULL, trans_tipo_vehiculo VARCHAR(150) NOT NULL, trans_nombre_companhia VARCHAR(50) NOT NULL, trans_numero_companhia VARCHAR(15) NOT NULL, trans_telefono_companhia VARCHAR(15) NOT NULL, PRIMARY KEY(trans_codigo)) ENGINE = INNODB;
CREATE TABLE tratamiento (tra_codigo BIGINT AUTO_INCREMENT, tra_pac_codigo BIGINT NOT NULL, tra_fecha_partida DATE, tra_tiempo_estadia BIGINT, tra_apto_operacion TINYINT DEFAULT '1', tra_costo_basico BIGINT, INDEX tra_pac_codigo_idx (tra_pac_codigo), PRIMARY KEY(tra_codigo)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE altapostoperatoria ADD CONSTRAINT altapostoperatoria_apo_cli_codigo_clinica_cli_codigo FOREIGN KEY (apo_cli_codigo) REFERENCES clinica(cli_codigo);
ALTER TABLE contacto ADD CONSTRAINT contacto_con_pac_codigo_paciente_pac_codigo FOREIGN KEY (con_pac_codigo) REFERENCES paciente(pac_codigo);
ALTER TABLE descripciontratamiento ADD CONSTRAINT descripciontratamiento_dtr_tit_codigo_tipotratamiento_tit_codigo FOREIGN KEY (dtr_tit_codigo) REFERENCES tipotratamiento(tit_codigo);
ALTER TABLE dietapaciente ADD CONSTRAINT dietapaciente_dtp_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (dtp_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE dietapaciente ADD CONSTRAINT dietapaciente_dtp_med_codigo_medico_med_codigo FOREIGN KEY (dtp_med_codigo) REFERENCES medico(med_codigo);
ALTER TABLE elementosxintervencion ADD CONSTRAINT elementosxintervencion_exi_preo_codigo_preoperatorio_preo_codigo FOREIGN KEY (exi_preo_codigo) REFERENCES preoperatorio(preo_codigo);
ALTER TABLE elementosxintervencion ADD CONSTRAINT eemm FOREIGN KEY (exi_maq_codigo) REFERENCES materialquirurgico(maq_codigo);
ALTER TABLE foto ADD CONSTRAINT foto_pos_codigo_postoperatorio_pos_codigo FOREIGN KEY (pos_codigo) REFERENCES postoperatorio(pos_codigo);
ALTER TABLE foto ADD CONSTRAINT foto_fot_preo_codigo_preoperatorio_preo_codigo FOREIGN KEY (fot_preo_codigo) REFERENCES preoperatorio(preo_codigo);
ALTER TABLE logistica ADD CONSTRAINT logistica_log_vue_codigo_reservavuelo_vue_codigo FOREIGN KEY (log_vue_codigo) REFERENCES reservavuelo(vue_codigo);
ALTER TABLE logistica ADD CONSTRAINT logistica_log_trans_codigo_transporte_trans_codigo FOREIGN KEY (log_trans_codigo) REFERENCES transporte(trans_codigo);
ALTER TABLE logistica ADD CONSTRAINT logistica_log_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (log_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE logistica ADD CONSTRAINT logistica_log_reh_codigo_reservahotel_reh_codigo FOREIGN KEY (log_reh_codigo) REFERENCES reservahotel(reh_codigo);
ALTER TABLE logistica ADD CONSTRAINT logistica_log_clo_codigo_guia_contactologistica_clo_codigo FOREIGN KEY (log_clo_codigo_guia) REFERENCES contactologistica(clo_codigo);
ALTER TABLE logistica ADD CONSTRAINT llcc FOREIGN KEY (log_clo_codigo_responsable) REFERENCES contactologistica(clo_codigo);
ALTER TABLE menu ADD CONSTRAINT menu_men_dtp_codigo_dietapaciente_dtp_codigo FOREIGN KEY (men_dtp_codigo) REFERENCES dietapaciente(dtp_codigo);
ALTER TABLE postoperatorio ADD CONSTRAINT postoperatorio_pos_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (pos_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE postoperatorio ADD CONSTRAINT postoperatorio_pos_med_codigo_responsable_medico_med_codigo FOREIGN KEY (pos_med_codigo_responsable) REFERENCES medico(med_codigo);
ALTER TABLE postoperatorio ADD CONSTRAINT postoperatorio_pos_enf_codigo_enfermera_enf_codigo FOREIGN KEY (pos_enf_codigo) REFERENCES enfermera(enf_codigo);
ALTER TABLE preoperatorio ADD CONSTRAINT preoperatorio_preo_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (preo_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE preoperatorio ADD CONSTRAINT preoperatorio_preo_med_codigo_medico_med_codigo FOREIGN KEY (preo_med_codigo) REFERENCES medico(med_codigo);
ALTER TABLE preoperatorio ADD CONSTRAINT preoperatorio_preo_enf_codigo_enfermera_enf_codigo FOREIGN KEY (preo_enf_codigo) REFERENCES enfermera(enf_codigo);
ALTER TABLE preoperatorio ADD CONSTRAINT preoperatorio_preo_cli_codigo_clinica_cli_codigo FOREIGN KEY (preo_cli_codigo) REFERENCES clinica(cli_codigo);
ALTER TABLE procedimiento ADD CONSTRAINT procedimiento_pro_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (pro_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE procedimiento ADD CONSTRAINT procedimiento_pro_tit_codigo_tipotratamiento_tit_codigo FOREIGN KEY (pro_tit_codigo) REFERENCES tipotratamiento(tit_codigo);
ALTER TABLE procedimiento ADD CONSTRAINT procedimiento_pro_dtr_codigo_descripciontratamiento_dtr_codigo FOREIGN KEY (pro_dtr_codigo) REFERENCES descripciontratamiento(dtr_codigo);
ALTER TABLE reservahotel ADD CONSTRAINT reservahotel_reh_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (reh_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE reservahotel ADD CONSTRAINT reservahotel_reh_hot_codigo_hotel_hot_codigo FOREIGN KEY (reh_hot_codigo) REFERENCES hotel(hot_codigo);
ALTER TABLE reservavuelo ADD CONSTRAINT reservavuelo_vue_tra_codigo_tratamiento_tra_codigo FOREIGN KEY (vue_tra_codigo) REFERENCES tratamiento(tra_codigo);
ALTER TABLE tratamiento ADD CONSTRAINT tratamiento_tra_pac_codigo_paciente_pac_codigo FOREIGN KEY (tra_pac_codigo) REFERENCES paciente(pac_codigo);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
